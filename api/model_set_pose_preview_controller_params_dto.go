/*
Hautech API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hautechapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetPosePreviewControllerParamsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetPosePreviewControllerParamsDto{}

// SetPosePreviewControllerParamsDto struct for SetPosePreviewControllerParamsDto
type SetPosePreviewControllerParamsDto struct {
	PreviewImageId string `json:"previewImageId"`
}

type _SetPosePreviewControllerParamsDto SetPosePreviewControllerParamsDto

// NewSetPosePreviewControllerParamsDto instantiates a new SetPosePreviewControllerParamsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetPosePreviewControllerParamsDto(previewImageId string) *SetPosePreviewControllerParamsDto {
	this := SetPosePreviewControllerParamsDto{}
	this.PreviewImageId = previewImageId
	return &this
}

// NewSetPosePreviewControllerParamsDtoWithDefaults instantiates a new SetPosePreviewControllerParamsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetPosePreviewControllerParamsDtoWithDefaults() *SetPosePreviewControllerParamsDto {
	this := SetPosePreviewControllerParamsDto{}
	return &this
}

// GetPreviewImageId returns the PreviewImageId field value
func (o *SetPosePreviewControllerParamsDto) GetPreviewImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviewImageId
}

// GetPreviewImageIdOk returns a tuple with the PreviewImageId field value
// and a boolean to check if the value has been set.
func (o *SetPosePreviewControllerParamsDto) GetPreviewImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviewImageId, true
}

// SetPreviewImageId sets field value
func (o *SetPosePreviewControllerParamsDto) SetPreviewImageId(v string) {
	o.PreviewImageId = v
}

func (o SetPosePreviewControllerParamsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetPosePreviewControllerParamsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["previewImageId"] = o.PreviewImageId
	return toSerialize, nil
}

func (o *SetPosePreviewControllerParamsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"previewImageId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetPosePreviewControllerParamsDto := _SetPosePreviewControllerParamsDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetPosePreviewControllerParamsDto)

	if err != nil {
		return err
	}

	*o = SetPosePreviewControllerParamsDto(varSetPosePreviewControllerParamsDto)

	return err
}

type NullableSetPosePreviewControllerParamsDto struct {
	value *SetPosePreviewControllerParamsDto
	isSet bool
}

func (v NullableSetPosePreviewControllerParamsDto) Get() *SetPosePreviewControllerParamsDto {
	return v.value
}

func (v *NullableSetPosePreviewControllerParamsDto) Set(val *SetPosePreviewControllerParamsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSetPosePreviewControllerParamsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSetPosePreviewControllerParamsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetPosePreviewControllerParamsDto(val *SetPosePreviewControllerParamsDto) *NullableSetPosePreviewControllerParamsDto {
	return &NullableSetPosePreviewControllerParamsDto{value: val, isSet: true}
}

func (v NullableSetPosePreviewControllerParamsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetPosePreviewControllerParamsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


