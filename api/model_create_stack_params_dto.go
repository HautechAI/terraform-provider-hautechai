/*
Hautech API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hautechapi

import (
	"encoding/json"
)

// checks if the CreateStackParamsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStackParamsDto{}

// CreateStackParamsDto struct for CreateStackParamsDto
type CreateStackParamsDto struct {
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewCreateStackParamsDto instantiates a new CreateStackParamsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStackParamsDto() *CreateStackParamsDto {
	this := CreateStackParamsDto{}
	return &this
}

// NewCreateStackParamsDtoWithDefaults instantiates a new CreateStackParamsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStackParamsDtoWithDefaults() *CreateStackParamsDto {
	this := CreateStackParamsDto{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreateStackParamsDto) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStackParamsDto) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateStackParamsDto) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *CreateStackParamsDto) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o CreateStackParamsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStackParamsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableCreateStackParamsDto struct {
	value *CreateStackParamsDto
	isSet bool
}

func (v NullableCreateStackParamsDto) Get() *CreateStackParamsDto {
	return v.value
}

func (v *NullableCreateStackParamsDto) Set(val *CreateStackParamsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStackParamsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStackParamsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStackParamsDto(val *CreateStackParamsDto) *NullableCreateStackParamsDto {
	return &NullableCreateStackParamsDto{value: val, isSet: true}
}

func (v NullableCreateStackParamsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStackParamsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


