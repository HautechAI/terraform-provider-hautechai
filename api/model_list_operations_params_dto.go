/*
Hautech API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hautechapi

import (
	"encoding/json"
)

// checks if the ListOperationsParamsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOperationsParamsDto{}

// ListOperationsParamsDto struct for ListOperationsParamsDto
type ListOperationsParamsDto struct {
	OrderBy *string `json:"orderBy,omitempty"`
	Limit *float32 `json:"limit,omitempty"`
	Cursor *string `json:"cursor,omitempty"`
}

// NewListOperationsParamsDto instantiates a new ListOperationsParamsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOperationsParamsDto() *ListOperationsParamsDto {
	this := ListOperationsParamsDto{}
	var orderBy string = "createdAt_DESC"
	this.OrderBy = &orderBy
	var limit float32 = 50
	this.Limit = &limit
	return &this
}

// NewListOperationsParamsDtoWithDefaults instantiates a new ListOperationsParamsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOperationsParamsDtoWithDefaults() *ListOperationsParamsDto {
	this := ListOperationsParamsDto{}
	var orderBy string = "createdAt_DESC"
	this.OrderBy = &orderBy
	var limit float32 = 50
	this.Limit = &limit
	return &this
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *ListOperationsParamsDto) GetOrderBy() string {
	if o == nil || IsNil(o.OrderBy) {
		var ret string
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOperationsParamsDto) GetOrderByOk() (*string, bool) {
	if o == nil || IsNil(o.OrderBy) {
		return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *ListOperationsParamsDto) HasOrderBy() bool {
	if o != nil && !IsNil(o.OrderBy) {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given string and assigns it to the OrderBy field.
func (o *ListOperationsParamsDto) SetOrderBy(v string) {
	o.OrderBy = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListOperationsParamsDto) GetLimit() float32 {
	if o == nil || IsNil(o.Limit) {
		var ret float32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOperationsParamsDto) GetLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ListOperationsParamsDto) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float32 and assigns it to the Limit field.
func (o *ListOperationsParamsDto) SetLimit(v float32) {
	o.Limit = &v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *ListOperationsParamsDto) GetCursor() string {
	if o == nil || IsNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOperationsParamsDto) GetCursorOk() (*string, bool) {
	if o == nil || IsNil(o.Cursor) {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *ListOperationsParamsDto) HasCursor() bool {
	if o != nil && !IsNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *ListOperationsParamsDto) SetCursor(v string) {
	o.Cursor = &v
}

func (o ListOperationsParamsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOperationsParamsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderBy) {
		toSerialize["orderBy"] = o.OrderBy
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	return toSerialize, nil
}

type NullableListOperationsParamsDto struct {
	value *ListOperationsParamsDto
	isSet bool
}

func (v NullableListOperationsParamsDto) Get() *ListOperationsParamsDto {
	return v.value
}

func (v *NullableListOperationsParamsDto) Set(val *ListOperationsParamsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableListOperationsParamsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableListOperationsParamsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOperationsParamsDto(val *ListOperationsParamsDto) *NullableListOperationsParamsDto {
	return &NullableListOperationsParamsDto{value: val, isSet: true}
}

func (v NullableListOperationsParamsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOperationsParamsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


