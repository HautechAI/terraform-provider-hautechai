/*
Hautech API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hautechapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KateImagineV1Input type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KateImagineV1Input{}

// KateImagineV1Input struct for KateImagineV1Input
type KateImagineV1Input struct {
	AspectRatio string `json:"aspectRatio"`
	Seed string `json:"seed"`
	Prompt string `json:"prompt"`
}

type _KateImagineV1Input KateImagineV1Input

// NewKateImagineV1Input instantiates a new KateImagineV1Input object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKateImagineV1Input(aspectRatio string, seed string, prompt string) *KateImagineV1Input {
	this := KateImagineV1Input{}
	this.AspectRatio = aspectRatio
	this.Seed = seed
	this.Prompt = prompt
	return &this
}

// NewKateImagineV1InputWithDefaults instantiates a new KateImagineV1Input object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKateImagineV1InputWithDefaults() *KateImagineV1Input {
	this := KateImagineV1Input{}
	return &this
}

// GetAspectRatio returns the AspectRatio field value
func (o *KateImagineV1Input) GetAspectRatio() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AspectRatio
}

// GetAspectRatioOk returns a tuple with the AspectRatio field value
// and a boolean to check if the value has been set.
func (o *KateImagineV1Input) GetAspectRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AspectRatio, true
}

// SetAspectRatio sets field value
func (o *KateImagineV1Input) SetAspectRatio(v string) {
	o.AspectRatio = v
}

// GetSeed returns the Seed field value
func (o *KateImagineV1Input) GetSeed() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Seed
}

// GetSeedOk returns a tuple with the Seed field value
// and a boolean to check if the value has been set.
func (o *KateImagineV1Input) GetSeedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seed, true
}

// SetSeed sets field value
func (o *KateImagineV1Input) SetSeed(v string) {
	o.Seed = v
}

// GetPrompt returns the Prompt field value
func (o *KateImagineV1Input) GetPrompt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value
// and a boolean to check if the value has been set.
func (o *KateImagineV1Input) GetPromptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prompt, true
}

// SetPrompt sets field value
func (o *KateImagineV1Input) SetPrompt(v string) {
	o.Prompt = v
}

func (o KateImagineV1Input) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KateImagineV1Input) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aspectRatio"] = o.AspectRatio
	toSerialize["seed"] = o.Seed
	toSerialize["prompt"] = o.Prompt
	return toSerialize, nil
}

func (o *KateImagineV1Input) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aspectRatio",
		"seed",
		"prompt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKateImagineV1Input := _KateImagineV1Input{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKateImagineV1Input)

	if err != nil {
		return err
	}

	*o = KateImagineV1Input(varKateImagineV1Input)

	return err
}

type NullableKateImagineV1Input struct {
	value *KateImagineV1Input
	isSet bool
}

func (v NullableKateImagineV1Input) Get() *KateImagineV1Input {
	return v.value
}

func (v *NullableKateImagineV1Input) Set(val *KateImagineV1Input) {
	v.value = val
	v.isSet = true
}

func (v NullableKateImagineV1Input) IsSet() bool {
	return v.isSet
}

func (v *NullableKateImagineV1Input) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKateImagineV1Input(val *KateImagineV1Input) *NullableKateImagineV1Input {
	return &NullableKateImagineV1Input{value: val, isSet: true}
}

func (v NullableKateImagineV1Input) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKateImagineV1Input) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


