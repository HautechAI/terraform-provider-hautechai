/*
Hautech API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hautechapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GroupEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupEntity{}

// GroupEntity struct for GroupEntity
type GroupEntity struct {
	Id string `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
}

type _GroupEntity GroupEntity

// NewGroupEntity instantiates a new GroupEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupEntity(id string, createdAt time.Time) *GroupEntity {
	this := GroupEntity{}
	this.Id = id
	this.CreatedAt = createdAt
	return &this
}

// NewGroupEntityWithDefaults instantiates a new GroupEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupEntityWithDefaults() *GroupEntity {
	this := GroupEntity{}
	return &this
}

// GetId returns the Id field value
func (o *GroupEntity) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GroupEntity) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GroupEntity) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GroupEntity) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GroupEntity) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GroupEntity) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o GroupEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	return toSerialize, nil
}

func (o *GroupEntity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupEntity := _GroupEntity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupEntity)

	if err != nil {
		return err
	}

	*o = GroupEntity(varGroupEntity)

	return err
}

type NullableGroupEntity struct {
	value *GroupEntity
	isSet bool
}

func (v NullableGroupEntity) Get() *GroupEntity {
	return v.value
}

func (v *NullableGroupEntity) Set(val *GroupEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupEntity(val *GroupEntity) *NullableGroupEntity {
	return &NullableGroupEntity{value: val, isSet: true}
}

func (v NullableGroupEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


