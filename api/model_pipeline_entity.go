/*
Hautech API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hautechapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PipelineEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineEntity{}

// PipelineEntity struct for PipelineEntity
type PipelineEntity struct {
	Kind string `json:"kind"`
	Permissions map[string]interface{} `json:"permissions"`
	State map[string]interface{} `json:"state"`
	Status string `json:"status"`
	Tasks []map[string]interface{} `json:"tasks"`
	Id string `json:"id"`
	CreatorId string `json:"creatorId"`
	Metadata map[string]interface{} `json:"metadata"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type _PipelineEntity PipelineEntity

// NewPipelineEntity instantiates a new PipelineEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineEntity(kind string, permissions map[string]interface{}, state map[string]interface{}, status string, tasks []map[string]interface{}, id string, creatorId string, metadata map[string]interface{}, createdAt time.Time, updatedAt time.Time) *PipelineEntity {
	this := PipelineEntity{}
	this.Kind = kind
	this.Permissions = permissions
	this.State = state
	this.Status = status
	this.Tasks = tasks
	this.Id = id
	this.CreatorId = creatorId
	this.Metadata = metadata
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewPipelineEntityWithDefaults instantiates a new PipelineEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineEntityWithDefaults() *PipelineEntity {
	this := PipelineEntity{}
	var kind string = "pipeline"
	this.Kind = kind
	return &this
}

// GetKind returns the Kind field value
func (o *PipelineEntity) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *PipelineEntity) SetKind(v string) {
	o.Kind = v
}

// GetPermissions returns the Permissions field value
func (o *PipelineEntity) GetPermissions() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetPermissionsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *PipelineEntity) SetPermissions(v map[string]interface{}) {
	o.Permissions = v
}

// GetState returns the State field value
func (o *PipelineEntity) GetState() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetStateOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.State, true
}

// SetState sets field value
func (o *PipelineEntity) SetState(v map[string]interface{}) {
	o.State = v
}

// GetStatus returns the Status field value
func (o *PipelineEntity) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PipelineEntity) SetStatus(v string) {
	o.Status = v
}

// GetTasks returns the Tasks field value
func (o *PipelineEntity) GetTasks() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetTasksOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tasks, true
}

// SetTasks sets field value
func (o *PipelineEntity) SetTasks(v []map[string]interface{}) {
	o.Tasks = v
}

// GetId returns the Id field value
func (o *PipelineEntity) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PipelineEntity) SetId(v string) {
	o.Id = v
}

// GetCreatorId returns the CreatorId field value
func (o *PipelineEntity) GetCreatorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetCreatorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *PipelineEntity) SetCreatorId(v string) {
	o.CreatorId = v
}

// GetMetadata returns the Metadata field value
func (o *PipelineEntity) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *PipelineEntity) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PipelineEntity) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PipelineEntity) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PipelineEntity) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PipelineEntity) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PipelineEntity) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PipelineEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kind"] = o.Kind
	toSerialize["permissions"] = o.Permissions
	toSerialize["state"] = o.State
	toSerialize["status"] = o.Status
	toSerialize["tasks"] = o.Tasks
	toSerialize["id"] = o.Id
	toSerialize["creatorId"] = o.CreatorId
	toSerialize["metadata"] = o.Metadata
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *PipelineEntity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kind",
		"permissions",
		"state",
		"status",
		"tasks",
		"id",
		"creatorId",
		"metadata",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPipelineEntity := _PipelineEntity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPipelineEntity)

	if err != nil {
		return err
	}

	*o = PipelineEntity(varPipelineEntity)

	return err
}

type NullablePipelineEntity struct {
	value *PipelineEntity
	isSet bool
}

func (v NullablePipelineEntity) Get() *PipelineEntity {
	return v.value
}

func (v *NullablePipelineEntity) Set(val *PipelineEntity) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineEntity) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineEntity(val *PipelineEntity) *NullablePipelineEntity {
	return &NullablePipelineEntity{value: val, isSet: true}
}

func (v NullablePipelineEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


